# .ipc files should be regenerated with connection compiler "PROJECT_ROOT/utils/compilers/ConnectionCompiler/connc {input} {output}"
# or run "PROJECT_ROOT/utils/codeassistant/recompile_connections.py"
# 
# After regeneration you have to recompile the whole project to apply changes.

{
    KEYPROTECTED
    NAME: BaseWindowServerDecoder
    MAGIC: 320
    GreetMessage() => GreetMessageReply(uint32_t connection_id)
    CreateWindowMessage(int type, uint32_t width, uint32_t height, int buffer_id, LIPC::StringEncoder title, LIPC::StringEncoder icon_path, LIPC::StringEncoder bundle_id, uint32_t color, uint32_t menubar_style) => CreateWindowMessageReply(uint32_t window_id)
    DestroyWindowMessage(uint32_t window_id) => DestroyWindowMessageReply(uint32_t status)
    SetBufferMessage(uint32_t window_id, int buffer_id, int format, LG::Rect bounds)
    SetBarStyleMessage(uint32_t window_id, uint32_t color, uint32_t menubar_style)
    SetTitleMessage(uint32_t window_id, LIPC::StringEncoder title)
    InvalidateMessage(uint32_t window_id, LG::Rect rect)
    AskBringToFrontMessage(uint32_t window_id, uint32_t target_window_id)

    # MenuBar
    MenuBarCreateMenuMessage(uint32_t window_id, LIPC::StringEncoder title) => MenuBarCreateMenuMessageReply(int status, int menu_id)
    MenuBarCreateItemMessage(uint32_t window_id, int menu_id, int item_id, LIPC::StringEncoder title) => MenuBarCreateItemMessageReply(int status)

    # Popup
    PopupShowMenuMessage(uint32_t window_id, LG::Point<int> point, LIPC::VectorEncoder<LIPC::StringEncoder> data) => PopupShowMenuMessageReply(int status, int menu_id)
}
{
    KEYPROTECTED
    NAME: BaseWindowClientDecoder
    MAGIC: 737
    MouseMoveMessage(int win_id, uint32_t x, uint32_t y)
    MouseActionMessage(int win_id, int type, uint32_t x, uint32_t y)
    MouseLeaveMessage(int win_id, uint32_t x, uint32_t y)
    MouseWheelMessage(int win_id, int wheel_data, uint32_t x, uint32_t y)
    KeyboardMessage(int win_id, uint32_t kbd_key)

    # Service Messages
    DisplayMessage(LG::Rect rect)
    WindowCloseRequestMessage(int win_id)
    ResizeMessage(int win_id, LG::Rect rect)
    DisconnectMessage(int reason)

    # MenuBar
    MenuBarActionMessage(int win_id, int menu_id, int item_id)

    # Popup
    PopupActionMessage(int win_id, int menu_id, int item_id)

    # Notifications
    NotifyWindowCreateMessage(int win_id, LIPC::StringEncoder bundle_id, LIPC::StringEncoder icon_path, int changed_window_id, int changed_window_type)
    NotifyWindowStatusChangedMessage(int win_id, int changed_window_id, int type)
    NotifyWindowTitleChangedMessage(int win_id, int changed_window_id, LIPC::StringEncoder title)
    NotifyWindowIconChangedMessage(int win_id, int changed_window_id, LIPC::StringEncoder icon_path)
}